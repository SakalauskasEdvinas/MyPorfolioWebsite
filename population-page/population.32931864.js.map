{"mappings":"AAAA,MAAMA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAG5BG,EAAMC,GAAGC,OAAO,UACnBC,OAAO,OACPC,KAAK,QAAS,QACdA,KAAK,SAAU,QACfA,KAAK,UAAW,OAAON,EAAQD,EAAcA,KAAgBE,EAASF,EAAaA,KACnFO,KAAK,sBAAuB,iBAC5BD,OAAO,KACPC,KAAK,YAAa,aAAaP,KAAeA,MAEjD,SAASQ,EAAYC,GAEnBC,MAAM,sCACHC,MAAKC,GAAYA,EAASC,SAC1BF,MAAKG,IACJ,IAAIC,EAGa,eAAbN,GACFO,SAASC,cAAc,gBAAgBC,UAAY,aACnDH,EAAkBD,EAAUK,MAAK,CAACC,EAAGC,IAAMA,EAAEC,WAAaF,EAAEE,cACtC,SAAbb,IACTO,SAASC,cAAc,gBAAgBC,UAAY,OAEnDH,EAAkBD,EAAUK,MAAK,CAACC,EAAGC,IAAMA,EAAEE,KAAOH,EAAEG,QAGxD,MACMC,EADeT,EAAgBU,MAAM,EAAG,IACpBC,KAAIC,IAAY,CACxCA,QAASA,EAAQC,KAAKC,OACtBC,MAAoB,eAAbrB,EACHkB,EAAQL,WAAa,IACR,SAAbb,EACAkB,EAAQJ,KAAO,MAMfQ,EAAI3B,GAAG4B,YACVC,OAAOT,EAAKE,KAAIQ,GAAKA,EAAEP,WACvBQ,MAAM,CAAC,EAAGlC,IACVmC,QAAQ,IAELC,EAAIjC,GAAGkC,cACVL,OAAO,CAAC,EAAG7B,GAAGmC,IAAIf,GAAMU,GAAKA,EAAEJ,UAC/BK,MAAM,CAACjC,EAAQ,IAGZsC,EAAOrC,EAAIsC,UAAU,QACxBjB,KAAKA,GAERgB,EAAKE,QACFpC,OAAO,QACPC,KAAK,QAAS,OACdoC,MAAMH,GACNjC,KAAK,KAAK2B,GAAKH,EAAEG,EAAEP,WACnBpB,KAAK,QAASwB,EAAEa,aAChBrC,KAAK,KAAK2B,GAAKG,EAAEH,EAAEJ,SACnBvB,KAAK,UAAU2B,GAAKhC,EAASmC,EAAEH,EAAEJ,SACjCvB,KAAK,OAAQ,aAEhBiC,EAAKK,OAAOC,SAGZ3C,EAAIsC,UAAU,YAAYK,SAC1B3C,EAAIsC,UAAU,YAAYK,SAE1B3C,EAAIG,OAAO,KACRC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAeL,MACjC6C,KAAK3C,GAAG4C,WAAWjB,IACnBU,UAAU,QACVQ,MAAM,cAAe,OACrB1C,KAAK,KAAM,SACXA,KAAK,KAAM,SACXA,KAAK,YAAa,eAEnBJ,EAAIG,OAAO,KACRC,KAAK,QAAS,UACdwC,KAAK3C,GAAG8C,SAASb,GAAA,IAErBc,OAAMC,IACLC,QAAQD,MAAM,+BAAgCA,EAAA,GAEpD,CAGApC,SAASsC,eAAe,UAAUC,iBAAiB,UAAUC,IAEzDhD,EADiBgD,EAAMC,OAAO3B,MAClB,IAIhBtB,EAAY","sources":["population-page/population-script.js"],"sourcesContent":["const margin = { top: 20, right: 20, bottom: 60, left: 60 };\r\nconst width = 800 - margin.left - margin.right;\r\nconst height = 500 - margin.top - margin.bottom;\r\n\r\n// Create the SVG container once, outside the updateChart function\r\nconst svg = d3.select('#chart')\r\n  .append('svg')\r\n  .attr('width', '100%')\r\n  .attr('height', '100%')\r\n  .attr('viewBox', `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n  .attr('preserveAspectRatio', 'xMidYMid meet')\r\n  .append('g')\r\n  .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\nfunction updateChart(filterBy) {\r\n  // Fetch data from REST Countries API\r\n  fetch('https://restcountries.com/v3.1/all')\r\n    .then(response => response.json())\r\n    .then(countries => {\r\n      let sortedCountries;\r\n\r\n      // Sort countries based on the filterBy option\r\n      if (filterBy === 'population') {\r\n        document.querySelector('#filter-text').innerHTML = \"population\"\r\n        sortedCountries = countries.sort((a, b) => b.population - a.population);\r\n      } else if (filterBy === 'area') {\r\n        document.querySelector('#filter-text').innerHTML = \"area\"\r\n\r\n        sortedCountries = countries.sort((a, b) => b.area - a.area);\r\n      }\r\n      \r\n      const topCountries = sortedCountries.slice(0, 10);\r\n      const data = topCountries.map(country => ({\r\n        country: country.name.common,\r\n        value: filterBy === 'population'\r\n          ? country.population / 1000000\r\n          : filterBy === 'area'\r\n          ? country.area : 0\r\n          \r\n          \r\n      }));\r\n      \r\n      // Create scales and axes for the chart\r\n      const x = d3.scaleBand()\r\n        .domain(data.map(d => d.country))\r\n        .range([0, width])\r\n        .padding(0.2);\r\n\r\n      const y = d3.scaleLinear()\r\n        .domain([0, d3.max(data, d => d.value)])\r\n        .range([height, 0]);\r\n\r\n      // Bind the data to the bars and update the chart\r\n      const bars = svg.selectAll('.bar')\r\n        .data(data);\r\n\r\n      bars.enter()\r\n        .append('rect')\r\n        .attr('class', 'bar')\r\n        .merge(bars)\r\n        .attr('x', d => x(d.country))\r\n        .attr('width', x.bandwidth())\r\n        .attr('y', d => y(d.value))\r\n        .attr('height', d => height - y(d.value))\r\n        .attr('fill', 'steelblue');\r\n\r\n      bars.exit().remove();\r\n\r\n      // Update the axes\r\n      svg.selectAll('g.x-axis').remove();\r\n      svg.selectAll('g.y-axis').remove();\r\n\r\n      svg.append('g')\r\n        .attr('class', 'x-axis')\r\n        .attr('transform', `translate(0,${height})`)\r\n        .call(d3.axisBottom(x))\r\n        .selectAll('text')\r\n        .style('text-anchor', 'end')\r\n        .attr('dx', '-.8em')\r\n        .attr('dy', '.15em')\r\n        .attr('transform', 'rotate(-65)');\r\n\r\n        svg.append('g')\r\n          .attr('class', 'y-axis')\r\n          .call(d3.axisLeft(y));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching country data:', error);\r\n      });\r\n  }\r\n  \r\n  // Add an event listener for the dropdown menu\r\n  document.getElementById('filter').addEventListener('change', event => {\r\n      const filterBy = event.target.value;\r\n      updateChart(filterBy);\r\n    });\r\n  \r\n  // Call the updateChart function on page load with the default filter option\r\n  updateChart('population');\r\n"],"names":["$3700dbe518c842e0$var$margin","$3700dbe518c842e0$var$width","$3700dbe518c842e0$var$height","$3700dbe518c842e0$var$svg","d3","select","append","attr","$3700dbe518c842e0$var$updateChart","filterBy","fetch","then","response","json","countries","sortedCountries","document","querySelector","innerHTML","sort","a","b","population","area","data","slice","map","country","name","common","value","x","scaleBand","domain","d","range","padding","y","scaleLinear","max","bars","selectAll","enter","merge","bandwidth","exit","remove","call","axisBottom","style","axisLeft","catch","error","console","getElementById","addEventListener","event","target"],"version":3,"file":"population.32931864.js.map"}